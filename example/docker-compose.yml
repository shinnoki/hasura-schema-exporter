version: '3.6'

services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
     - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  graphql-engine:
    image: hasura/graphql-engine:v2.10.0.cli-migrations-v3
    ports:
     - "8080:8080"
    depends_on:
     - "postgres"
    restart: always
    volumes:
      - ./metadata:/hasura-metadata
      - ./migrations:/hasura-migrations
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    
  sync-schema:
    build: "../"
    depends_on:
     - "graphql-engine"
    volumes:
      - ./metadata:/hasura-metadata
      - ./migrations:/hasura-migrations
      - ./schema:/hasura-schema
    environment:
      HASURA_GRAPHQL_ENDPOINT : http://graphql-engine:8080
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_SYNC_SCHEMA_ROLES: admin, user, anonymous
volumes:
  db_data:

